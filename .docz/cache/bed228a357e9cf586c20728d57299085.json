{"remainingRequest":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"D:\\\\Files\\\\iGEM\\\\iGEM 2018\\\\wiki-tutorial\\\\node_modules\\\\babel-preset-react-app\\\\index.js\",{\"flow\":true}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\src\\CSS.mdx","dependencies":[{"path":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\src\\CSS.mdx","mtime":1535671059518},{"path":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535643865817},{"path":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1535643865763}],"contextDependencies":[],"result":["var _jsxFileName = \"D:\\\\Files\\\\iGEM\\\\iGEM 2018\\\\wiki-tutorial\\\\src\\\\CSS.mdx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Img } from './Img';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"css-with-mediawiki\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h1\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#css-with-mediawiki\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"#\")), \"CSS with MediaWiki\"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"inline-css\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#inline-css\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"#\")), \"Inline CSS\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"You can add in CSS inside the HTML as you may have learned. Like this:\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"<html>\\n    <style>\\n        #uw-header {\\n            font-size: 50;\\n            color: red;\\n        }\\n    </style>\\n\\n    <h1 id=\\\"uw-header\\\">iGEM Washington Example</h1>\\n    <h2 id=\\\"uw-subheader\\\">This is the example page one</h2>\\n    <p id=\\\"uw-content\\\">Content content content content content</p>\\n</html>\\n\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"which works! See:\"), React.createElement(Img, {\n    src: require('./imgs/1-2.png'),\n    alt: \"example 1-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"It's common practice to keep CSS and HTML like this separated. The reason to isn't entirely justified, because styling goes hand in hand with the HTML. However, it does give your code some arbitrary separation, so it feels more organized. How do you do that?\"));\n});",{"version":3,"sources":["src\\CSS.mdx"],"names":["React","MDXTag","Img","components","props","require"],"mappings":";;;;;;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAAQC,GAAR,QAAkB,OAAlB;AAEF,gBAAe;AAAA,MAAEC,UAAF,QAAEA,UAAF;AAAA,MAAiBC,KAAjB;;AAAA,SAA4B,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAwB,IAAA,UAAU,EAAED,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,UAAU,EAAEA,UAA9B;AAA0C,IAAA,KAAK,EAAE;AAAC,YAAK;AAAN,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8E,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAyC,IAAA,UAAU,EAAC,IAApD;AAAyD,IAAA,KAAK,EAAE;AAAC,qBAAc,IAAf;AAAoB,cAAO;AAA3B,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmH,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAEA,UAAhC;AAA4C,IAAA,UAAU,EAAC,GAAvD;AAA2D,IAAA,KAAK,EAAE;AAAC,mBAAY;AAAb,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAnH,CAA9E,uBAD2C,EAE3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,UAAU,EAAEA,UAA9B;AAA0C,IAAA,KAAK,EAAE;AAAC,YAAK;AAAN,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAyC,IAAA,UAAU,EAAC,IAApD;AAAyD,IAAA,KAAK,EAAE;AAAC,qBAAc,IAAf;AAAoB,cAAO;AAA3B,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2G,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAEA,UAAhC;AAA4C,IAAA,UAAU,EAAC,GAAvD;AAA2D,IAAA,KAAK,EAAE;AAAC,mBAAY;AAAb,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3G,CAAtE,eAF2C,EAG3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAH2C,EAI3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,KAAb;AAAmB,IAAA,UAAU,EAAEA,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAEA,UAAhC;AAA4C,IAAA,UAAU,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wUAA3C,CAJ2C,EAiB3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAjB2C,EAkB3C,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEE,OAAO,CAAC,gBAAD,CAAjB;AAAqC,IAAA,GAAG,EAAE,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlB2C,EAmB3C,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,GAAb;AAAiB,IAAA,UAAU,EAAEF,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0QAnB2C,CAA5B;AAAA,CAAf","sourceRoot":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import {Img} from './Img';\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"css-with-mediawiki\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"aria-hidden\":true,\"href\":\"#css-with-mediawiki\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`CSS with MediaWiki`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"inline-css\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#inline-css\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Inline CSS`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can add in CSS inside the HTML as you may have learned. Like this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\">{`<html>\n    <style>\n        #uw-header {\n            font-size: 50;\n            color: red;\n        }\n    </style>\n\n    <h1 id=\"uw-header\">iGEM Washington Example</h1>\n    <h2 id=\"uw-subheader\">This is the example page one</h2>\n    <p id=\"uw-content\">Content content content content content</p>\n</html>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`which works! See:`}</MDXTag>\n<Img src={require('./imgs/1-2.png')} alt={\"example 1-2\"} />\n<MDXTag name=\"p\" components={components}>{`It's common practice to keep CSS and HTML like this separated. The reason to isn't entirely justified, because styling goes hand in hand with the HTML. However, it does give your code some arbitrary separation, so it feels more organized. How do you do that?`}</MDXTag></MDXTag>\n  "]}]}