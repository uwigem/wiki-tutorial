{"remainingRequest":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[[\"D:\\\\Files\\\\iGEM\\\\iGEM 2018\\\\wiki-tutorial\\\\node_modules\\\\babel-preset-react-app\\\\index.js\",{\"flow\":true}]],\"plugins\":[],\"cacheDirectory\":true,\"babelrc\":false}!D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\src\\Imgsize.mdx","dependencies":[{"path":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\src\\Imgsize.mdx","mtime":1535695084019},{"path":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535643865817},{"path":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial\\node_modules\\docz-core\\node_modules\\babel-loader\\lib\\index.js","mtime":1535643865763}],"contextDependencies":[],"result":["var _jsxFileName = \"D:\\\\Files\\\\iGEM\\\\iGEM 2018\\\\wiki-tutorial\\\\src\\\\Imgsize.mdx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Img } from './Img';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components,\n    props: {\n      \"id\": \"image-sizes\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h1\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#image-sizes\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"#\")), \"Image Sizes\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Try going to Google Images on slow internet (You can simulate slow internet through the network tab on the Chrome Debugger Console). You can see that the images load within about 10 seconds. This is an unspoken rule in web development-- you want to go from page load to interactive within 10 seconds. \"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Now, without going into some difficult JavaScript programming, this is a little hard to do. The best we can do with the iGEM website is make our images as small as possible. To do this, you have to take your full quality image, and scale it down and compress it in Photoshop or something. \"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"general-practices\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#general-practices\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"#\")), \"General practices\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"At least make the final image file size under 750KB, has always been my rule for images on the iGEM wiki. This allows the page to load in a reasonable time period.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Images like your team member photos which are taken with a high quality DSLR have 5MB file fizes. They're often around 4000 pixels long and wide, which is unnecessary, especially when they will be likely printed out in the HTML as a 250x250 size image. \"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"the-procedure\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#the-procedure\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"#\")), \"The procedure\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Step 1 is to shrink the image to the size you need to. If it's a background image that spans the entire width of the page, you should probably only need to make it 1920x1080 at the largest. I personally prefer not to worry about any quality differences for people with larger screens than the size that most monitors are at right now. \"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Step 2 is to compress it with file processing with photoshop or some image editor. When I export the image after resizing/cropping, I make sure to output it at the smallest file size. \"), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"uploading-it\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"aria-hidden\": true,\n      \"href\": \"#uploading-it\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(MDXTag, {\n    name: \"span\",\n    components: components,\n    parentName: \"a\",\n    props: {\n      \"className\": \"icon-link\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"#\")), \"Uploading it\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"When you go to \", React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://2018.igem.org/Special:Upload\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"http://2018.igem.org/Special:Upload\"), \" to upload it, you can upload any of the permitted file types. \"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"You HAVE to name it \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"T--[YOURTEAMNAME]--_______.[EXTENSION]\"), \". where you can fill out the blank with your file name.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"When it is uploaded, you have to right click the image preview and then copy the image address to use for using \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"<img>\"), \" tags, or importing into CSS. You can use the image templating system, but then you cannot style the image at all. \"));\n});",{"version":3,"sources":["src\\Imgsize.mdx"],"names":["React","MDXTag","Img","components","props"],"mappings":"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","sourceRoot":"D:\\Files\\iGEM\\iGEM 2018\\wiki-tutorial","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import {Img} from './Img';\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"image-sizes\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"aria-hidden\":true,\"href\":\"#image-sizes\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Image Sizes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Try going to Google Images on slow internet (You can simulate slow internet through the network tab on the Chrome Debugger Console). You can see that the images load within about 10 seconds. This is an unspoken rule in web development-- you want to go from page load to interactive within 10 seconds. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, without going into some difficult JavaScript programming, this is a little hard to do. The best we can do with the iGEM website is make our images as small as possible. To do this, you have to take your full quality image, and scale it down and compress it in Photoshop or something. `}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"general-practices\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#general-practices\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`General practices`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`At least make the final image file size under 750KB, has always been my rule for images on the iGEM wiki. This allows the page to load in a reasonable time period.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Images like your team member photos which are taken with a high quality DSLR have 5MB file fizes. They're often around 4000 pixels long and wide, which is unnecessary, especially when they will be likely printed out in the HTML as a 250x250 size image. `}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"the-procedure\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#the-procedure\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`The procedure`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Step 1 is to shrink the image to the size you need to. If it's a background image that spans the entire width of the page, you should probably only need to make it 1920x1080 at the largest. I personally prefer not to worry about any quality differences for people with larger screens than the size that most monitors are at right now. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Step 2 is to compress it with file processing with photoshop or some image editor. When I export the image after resizing/cropping, I make sure to output it at the smallest file size. `}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"uploading-it\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"aria-hidden\":true,\"href\":\"#uploading-it\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon-link\"}}>{`#`}</MDXTag></MDXTag>{`Uploading it`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When you go to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://2018.igem.org/Special:Upload\"}}>{`http://2018.igem.org/Special:Upload`}</MDXTag>{` to upload it, you can upload any of the permitted file types. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You HAVE to name it `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`T--[YOURTEAMNAME]--_______.[EXTENSION]`}</MDXTag>{`. where you can fill out the blank with your file name.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When it is uploaded, you have to right click the image preview and then copy the image address to use for using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<img>`}</MDXTag>{` tags, or importing into CSS. You can use the image templating system, but then you cannot style the image at all. `}</MDXTag></MDXTag>\n  "]}]}